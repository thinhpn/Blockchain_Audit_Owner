/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyPets, MyPetsInterface } from "../../contracts/MyPets";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_myDog",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MyDog",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_myDog",
        type: "string",
      },
    ],
    name: "updateDog",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000daf38038062000daf833981810160405281019062000037919062000265565b620000576200004b6200007760201b60201c565b6200007f60201b60201c565b80600190805190602001906200006f92919062000143565b50506200041a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805462000151906200033f565b90600052602060002090601f016020900481019282620001755760008555620001c1565b82601f106200019057805160ff1916838001178555620001c1565b82800160010185558215620001c1579182015b82811115620001c0578251825591602001919060010190620001a3565b5b509050620001d09190620001d4565b5090565b5b80821115620001ef576000816000905550600101620001d5565b5090565b60006200020a6200020484620002d3565b620002aa565b9050828152602081018484840111156200022357600080fd5b6200023084828562000309565b509392505050565b600082601f8301126200024a57600080fd5b81516200025c848260208601620001f3565b91505092915050565b6000602082840312156200027857600080fd5b600082015167ffffffffffffffff8111156200029357600080fd5b620002a18482850162000238565b91505092915050565b6000620002b6620002c9565b9050620002c4828262000375565b919050565b6000604051905090565b600067ffffffffffffffff821115620002f157620002f0620003da565b5b620002fc8262000409565b9050602081019050919050565b60005b83811015620003295780820151818401526020810190506200030c565b8381111562000339576000848401525b50505050565b600060028204905060018216806200035857607f821691505b602082108114156200036f576200036e620003ab565b5b50919050565b620003808262000409565b810181811067ffffffffffffffff82111715620003a257620003a1620003da565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610985806200042a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806304fcac741461005c5780635543a68914610078578063715018a6146100965780638da5cb5b146100a0578063f2fde38b146100be575b600080fd5b610076600480360381019061007191906105bc565b6100da565b005b610080610170565b60405161008d91906106a6565b60405180910390f35b61009e6101fe565b005b6100a8610286565b6040516100b5919061068b565b60405180910390f35b6100d860048036038101906100d39190610593565b6102af565b005b6100e26103a7565b73ffffffffffffffffffffffffffffffffffffffff16610100610286565b73ffffffffffffffffffffffffffffffffffffffff1614610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d906106e8565b60405180910390fd5b806001908051906020019061016c929190610473565b5050565b6001805461017d906107ee565b80601f01602080910402602001604051908101604052809291908181526020018280546101a9906107ee565b80156101f65780601f106101cb576101008083540402835291602001916101f6565b820191906000526020600020905b8154815290600101906020018083116101d957829003601f168201915b505050505081565b6102066103a7565b73ffffffffffffffffffffffffffffffffffffffff16610224610286565b73ffffffffffffffffffffffffffffffffffffffff161461027a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610271906106e8565b60405180910390fd5b61028460006103af565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102b76103a7565b73ffffffffffffffffffffffffffffffffffffffff166102d5610286565b73ffffffffffffffffffffffffffffffffffffffff161461032b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610322906106e8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561039b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610392906106c8565b60405180910390fd5b6103a4816103af565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805461047f906107ee565b90600052602060002090601f0160209004810192826104a157600085556104e8565b82601f106104ba57805160ff19168380011785556104e8565b828001600101855582156104e8579182015b828111156104e75782518255916020019190600101906104cc565b5b5090506104f591906104f9565b5090565b5b808211156105125760008160009055506001016104fa565b5090565b60006105296105248461072d565b610708565b90508281526020810184848401111561054157600080fd5b61054c8482856107ac565b509392505050565b60008135905061056381610938565b92915050565b600082601f83011261057a57600080fd5b813561058a848260208601610516565b91505092915050565b6000602082840312156105a557600080fd5b60006105b384828501610554565b91505092915050565b6000602082840312156105ce57600080fd5b600082013567ffffffffffffffff8111156105e857600080fd5b6105f484828501610569565b91505092915050565b6106068161077a565b82525050565b60006106178261075e565b6106218185610769565b93506106318185602086016107bb565b61063a816108af565b840191505092915050565b6000610652602683610769565b915061065d826108c0565b604082019050919050565b6000610675602083610769565b91506106808261090f565b602082019050919050565b60006020820190506106a060008301846105fd565b92915050565b600060208201905081810360008301526106c0818461060c565b905092915050565b600060208201905081810360008301526106e181610645565b9050919050565b6000602082019050818103600083015261070181610668565b9050919050565b6000610712610723565b905061071e8282610820565b919050565b6000604051905090565b600067ffffffffffffffff82111561074857610747610880565b5b610751826108af565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006107858261078c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156107d95780820151818401526020810190506107be565b838111156107e8576000848401525b50505050565b6000600282049050600182168061080657607f821691505b6020821081141561081a57610819610851565b5b50919050565b610829826108af565b810181811067ffffffffffffffff8211171561084857610847610880565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6109418161077a565b811461094c57600080fd5b5056fea26469706673582212205d124dafd490f4806f153567b4b3c581f3826a9281d4e49d464f53efa64cb7c064736f6c63430008010033";

type MyPetsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyPetsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyPets__factory extends ContractFactory {
  constructor(...args: MyPetsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _myDog: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyPets> {
    return super.deploy(_myDog, overrides || {}) as Promise<MyPets>;
  }
  override getDeployTransaction(
    _myDog: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_myDog, overrides || {});
  }
  override attach(address: string): MyPets {
    return super.attach(address) as MyPets;
  }
  override connect(signer: Signer): MyPets__factory {
    return super.connect(signer) as MyPets__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyPetsInterface {
    return new utils.Interface(_abi) as MyPetsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MyPets {
    return new Contract(address, _abi, signerOrProvider) as MyPets;
  }
}
